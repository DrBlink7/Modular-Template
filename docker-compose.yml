version: "3.8"
volumes:
  test_data:
services:
  db:
    container_name: db-test
    image: postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devPassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - test_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  frontend:
    container_name: frontend-test
    image: frontend-test
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public
    ports:
      - "3000:3000"

  # frontend2:
  #   container_name: frontend2-test
  #   image: frontend2-test
  #   build:
  #     context: ./frontend
  #     target: development
  #   volumes:
  #     - ./frontend2/src:/frontend2/src
  #     - ./frontend2/public:/frontend2/public
  #   ports:
  #     - "4200:4200"
      
  b4f:
    container_name: b4f-test
    image: b4f-test
    build:
      context: ./b4f
      target: development
    volumes:
      - ./b4f:/b4f
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
    ports:
      - "3001:3001"

  # backend:
  #   container_name: backend-test
  #   build:
  #     context: ./backend
  #   volumes:
  #     - ./backend:/backend
  #   ports:
  #     - "8000:8000"

  # backend2:
  #   container_name: backend2-test
  #   image: backend2-test
  #   build:
  #     context: ./backend
  #     target: development
  #   volumes:
  #     - ./backend2:/backend2
  #   depends_on:
  #     - db
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "--silent"]
  #   ports:
  #     - "8080:8080"
