# Docker Compose Complete - All Services
# This includes all frontend and backend services for comprehensive development

volumes:
  test_data:

services:
  db:
    container_name: db-test
    image: postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devPassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - test_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  # Frontend Applications
  frontend:
    container_name: frontend-test
    image: frontend-test
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public
    ports:
      - "5173:5173"
    depends_on:
      - backend

  frontend1:
    container_name: frontend1-test
    image: frontend1-test
    build:
      context: ./frontend1
      target: development
    volumes:
      - ./frontend1/src:/frontend1/src
      - ./frontend1/public:/frontend1/public
    ports:
      - "3000:3000"
    depends_on:
      - b4f

  frontend2:
    container_name: frontend2-test
    image: frontend2-test
    build:
      context: ./frontend2
      target: development
    volumes:
      - ./frontend2/src:/frontend2/src
      - ./frontend2/public:/frontend2/public
    ports:
      - "4321:4321"

  frontend3:
    container_name: frontend3-test
    image: frontend3-test
    build:
      context: ./frontend3
      target: development
    volumes:
      - ./frontend3/src:/frontend3/src
      - ./frontend3/public:/frontend3/public
    ports:
      - "3003:3003"
    depends_on:
      - b4f1

  frontend4:
    container_name: frontend4-test
    image: frontend4-test
    build:
      context: ./frontend4
      target: development
    volumes:
      - ./frontend4/src:/frontend4/src
      - ./frontend4/public:/frontend4/public
    ports:
      - "3004:3004"

  frontend5:
    container_name: frontend5-test
    image: frontend5-test
    build:
      context: ./frontend5
      target: development
    ports:
      - "4200:4200"
    volumes:
      - ./frontend5/src:/frontend5/src:cached
      - /frontend5/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NG_CLI_ANALYTICS=false

  # Backend Services
  backend:
    container_name: backend-test
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    depends_on:
      - db
    ports:
      - "8000:8000"
    environment:
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:3003,http://localhost:3004,http://localhost:4200,http://localhost:4321

  b4f:
    container_name: b4f-test
    image: b4f-test
    build:
      context: ./b4f
      target: development
    volumes:
      - ./b4f:/b4f
    depends_on:
      - db
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev:devPassword@db:5432/postgres?schema=public

  b4f1:
    container_name: b4f1-test
    image: b4f1-test
    build:
      context: ./b4f1
      target: development
    volumes:
      - ./b4f1:/b4f1
    depends_on:
      - db
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev:devPassword@db:5432/postgres?schema=public
